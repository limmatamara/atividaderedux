{"ast":null,"code":"import api from '../../api';\nexport const readUser = async dispatch => {\n  const token = localStorage.getItem('token');\n  const {\n    data\n  } = await api.get('/pessoa', {\n    headers: {\n      authorization: token\n    }\n  });\n  const pessoa = {\n    type: 'READ_PESSOA',\n    listaDePessoas: data\n  };\n};\nexport const createUser = async (values, dispatch) => {\n  const token = localStorage.getItem('token');\n  await api.post('/pessoa', values, {\n    headers: {\n      authorization: token\n    }\n  });\n  readUser(dispatch);\n};\nexport const updateForm = async (pessoa, dispatch, formik) => {\n  const dadosForm = {\n    type: 'UPDATE_PESSOA',\n    editar: true,\n    initialValues: {\n      nome: pessoa.nome,\n      email: pessoa.email,\n      dataDeNascimento: pessoa.dataDeNascimento,\n      cpf: pessoa.cpf,\n      idPessoa: pessoa.idPessoa\n    }\n  };\n  dispatch(updateForm);\n  formik.setValues(dadosForm.initialValues);\n};\nexport const updateUser = async (values, dispatch) => {\n  const token = localStorage.getItem('token');\n  await api.put(`/pessoa/${values.id}`, values, {\n    headers: {\n      authorization: token\n    }\n  });\n  readUser(dispatch);\n};\nexport const deleteUser = async (idPessoa, dispatch) => {\n  const token = localStorage.getItem('token');\n  await api.delete(`/pessoa/${idPessoa}`, {\n    headers: {\n      authorization: token\n    }\n  });\n  readUser(dispatch);\n};","map":{"version":3,"sources":["/home/tamara/Arquivos Tamara/Desktop/vemserdbc/Redux/loginredux/src/store/actions/PessoasActions.js"],"names":["api","readUser","dispatch","token","localStorage","getItem","data","get","headers","authorization","pessoa","type","listaDePessoas","createUser","values","post","updateForm","formik","dadosForm","editar","initialValues","nome","email","dataDeNascimento","cpf","idPessoa","setValues","updateUser","put","id","deleteUser","delete"],"mappings":"AAAA,OAAOA,GAAP,MAAgB,WAAhB;AAEA,OAAO,MAAMC,QAAQ,GAAG,MAAOC,QAAP,IAAoB;AAC1C,QAAMC,KAAK,GAAGC,YAAY,CAACC,OAAb,CAAqB,OAArB,CAAd;AACA,QAAM;AAAEC,IAAAA;AAAF,MAAW,MAAMN,GAAG,CAACO,GAAJ,CAAQ,SAAR,EAAmB;AAACC,IAAAA,OAAO,EAAE;AAACC,MAAAA,aAAa,EAACN;AAAf;AAAV,GAAnB,CAAvB;AACA,QAAMO,MAAM,GAAG;AACbC,IAAAA,IAAI,EAAE,aADO;AAEbC,IAAAA,cAAc,EAAEN;AAFH,GAAf;AAID,CAPM;AASP,OAAO,MAAMO,UAAU,GAAG,OAAOC,MAAP,EAAeZ,QAAf,KAA4B;AACpD,QAAMC,KAAK,GAAGC,YAAY,CAACC,OAAb,CAAqB,OAArB,CAAd;AACA,QAAML,GAAG,CAACe,IAAJ,CAAS,SAAT,EAAoBD,MAApB,EAA4B;AAACN,IAAAA,OAAO,EAAE;AAACC,MAAAA,aAAa,EAACN;AAAf;AAAV,GAA5B,CAAN;AACAF,EAAAA,QAAQ,CAACC,QAAD,CAAR;AACD,CAJM;AAMP,OAAO,MAAMc,UAAU,GAAG,OAAON,MAAP,EAAeR,QAAf,EAAyBe,MAAzB,KAAmC;AACzD,QAAMC,SAAS,GAAI;AACjBP,IAAAA,IAAI,EAAE,eADW;AAEjBQ,IAAAA,MAAM,EAAE,IAFS;AAGjBC,IAAAA,aAAa,EAAE;AACbC,MAAAA,IAAI,EAAEX,MAAM,CAACW,IADA;AAEbC,MAAAA,KAAK,EAAEZ,MAAM,CAACY,KAFD;AAGbC,MAAAA,gBAAgB,EAAEb,MAAM,CAACa,gBAHZ;AAIbC,MAAAA,GAAG,EAAEd,MAAM,CAACc,GAJC;AAKbC,MAAAA,QAAQ,EAAEf,MAAM,CAACe;AALJ;AAHE,GAAnB;AAWFvB,EAAAA,QAAQ,CAACc,UAAD,CAAR;AACAC,EAAAA,MAAM,CAACS,SAAP,CAAiBR,SAAS,CAACE,aAA3B;AACD,CAdM;AAgBP,OAAO,MAAMO,UAAU,GAAG,OAAOb,MAAP,EAAeZ,QAAf,KAA4B;AACpD,QAAMC,KAAK,GAAGC,YAAY,CAACC,OAAb,CAAqB,OAArB,CAAd;AACA,QAAML,GAAG,CAAC4B,GAAJ,CAAS,WAAUd,MAAM,CAACe,EAAG,EAA7B,EAAgCf,MAAhC,EAAwC;AAACN,IAAAA,OAAO,EAAE;AAACC,MAAAA,aAAa,EAACN;AAAf;AAAV,GAAxC,CAAN;AACDF,EAAAA,QAAQ,CAACC,QAAD,CAAR;AACA,CAJM;AAMP,OAAO,MAAM4B,UAAU,GAAG,OAAOL,QAAP,EAAiBvB,QAAjB,KAA8B;AACtD,QAAMC,KAAK,GAAGC,YAAY,CAACC,OAAb,CAAqB,OAArB,CAAd;AACA,QAAML,GAAG,CAAC+B,MAAJ,CAAY,WAAUN,QAAS,EAA/B,EAAkC;AAACjB,IAAAA,OAAO,EAAE;AAACC,MAAAA,aAAa,EAACN;AAAf;AAAV,GAAlC,CAAN;AACAF,EAAAA,QAAQ,CAACC,QAAD,CAAR;AACD,CAJM","sourcesContent":["import api from '../../api'\n\nexport const readUser = async (dispatch) => {\n  const token = localStorage.getItem('token');\n  const { data } = await api.get('/pessoa', {headers: {authorization:token}});\n  const pessoa = {\n    type: 'READ_PESSOA', \n    listaDePessoas: data\n  }\n}\n\nexport const createUser = async (values, dispatch) => {\n  const token = localStorage.getItem('token')\n  await api.post('/pessoa', values, {headers: {authorization:token}} );\n  readUser(dispatch)\n}\n\nexport const updateForm = async (pessoa, dispatch, formik) =>{\n    const dadosForm = ({\n      type: 'UPDATE_PESSOA',\n      editar: true, \n      initialValues: {\n        nome: pessoa.nome,\n        email: pessoa.email,\n        dataDeNascimento: pessoa.dataDeNascimento,\n        cpf: pessoa.cpf,\n        idPessoa: pessoa.idPessoa\n      }\n    })\n  dispatch(updateForm)\n  formik.setValues(dadosForm.initialValues)\n}\n\nexport const updateUser = async (values, dispatch) => {\n  const token = localStorage.getItem('token');\n  await api.put(`/pessoa/${values.id}`, values, {headers: {authorization:token}});\n readUser(dispatch);\n}\n\nexport const deleteUser = async (idPessoa, dispatch) => {\n  const token = localStorage.getItem('token');\n  await api.delete(`/pessoa/${idPessoa}`, {headers: {authorization:token}});\n  readUser(dispatch);\n}"]},"metadata":{},"sourceType":"module"}